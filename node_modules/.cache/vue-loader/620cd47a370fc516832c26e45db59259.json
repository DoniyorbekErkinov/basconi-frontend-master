{"remainingRequest":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!P:\\noenter\\basconi-frontend-master\\src\\modules\\post\\return-goods\\index.vue?vue&type=style&index=0&id=071efe8c&scoped=true&lang=css&","dependencies":[{"path":"P:\\noenter\\basconi-frontend-master\\src\\modules\\post\\return-goods\\index.vue","mtime":1652787130000},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1695882312813},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1695882545754},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1695882308750},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1695882313197},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1695882545643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zbWFsbCB7CiAgZm9udC1zaXplOiAxMHB4OwogIHJpZ2h0OiAtMTUwcHg7CiAgdG9wOiAtMTBweDsKfQouZGVza3RvcCB7CiAgZm9udC1zaXplOiAxMHB4OwogIHJpZ2h0OiAtMzgwcHg7CiAgdG9wOiAtMTJweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/modules/post/return-goods","sourcesContent":["<template>\n  <div>\n    <q-table\n        v-if=\"windowWidth > 600\"\n        class=\"shadow-10\"\n        bordered\n        row=\"row\"\n        :data=\"items\"\n        :columns=\"columns\"\n        :hide-pagination=\"true\"\n        :rows-per-page-options=\"[0]\"\n    >\n      <template v-slot:top>\n        <div v-if=\"windowWidth > 600\" class=\"q-table__title\">{{ $t('post.return') }}</div>\n        <q-space/>\n        <vs-input  icon-after class=\"q-mr-lg\" state=\"primary\" v-model=\"search\" :placeholder=\"$t('actions.search')\">\n          <template #icon>\n            <q-icon name=\"search\"/>\n          </template>\n        </vs-input>\n        <vs-button dark icon animation-type=\"rotate\" @click=\"getItemByRegNumber\">\n        <q-icon name=\"search\"/>\n      </vs-button>\n      </template>\n      <template v-slot:body-cell-id=\"props\">\n        <q-td class=\"text-center\">{{ props.rowIndex + 1 }}</q-td>\n      </template>\n      <template v-slot:body-cell-actions=\"props\">\n        <q-td class=\"text-center\">\n          <vs-button style=\"display: inline-block\" flat icon dark @click=\"getDescription(props.row.id)\">\n            <q-icon name=\"visibility\"/>\n          </vs-button>\n        </q-td>\n      </template>\n    </q-table>\n    <div v-if=\"windowWidth < 600\">\n      <q-toolbar>\n        <vs-input block state=\"primary\" v-model=\"search\"  icon-after class=\"mb-1\" :placeholder=\"$t('actions.search')\">\n          <template #icon>\n            <q-icon name=\"search\"/>\n          </template>\n        </vs-input>\n      </q-toolbar>\n      <q-card dense v-if=\"found\" v-for=\"(item, i) in items\" :key=\"i\" class=\"mb-1\">\n        <q-card-section dense class=\"bg-cyan-3 text-blue-grey-10\" @click=\"getDescription(item.id)\">\n          <div style=\"display: flex; justify-content: space-between; text-align: left\">\n            <b style=\"letter-spacing: 2px\">{{ $t('post.seller') }}:</b><p>{{item.cashierName}}</p>\n          </div>\n          <div style=\"display: flex; justify-content: space-between\">\n            <b style=\"letter-spacing: 2px\">{{ $t('post.regNumber') }}:</b><p>{{item.regNumber}}</p>\n          </div>\n          <div style=\"display: flex; justify-content: space-between\">\n            <b style=\"letter-spacing: 2px\">{{ $t('post.regDate') }}:</b><p>{{item.regDate}}</p>\n          </div>\n          <div style=\"display: flex; justify-content: space-between\">\n            <b style=\"letter-spacing: 2px\">{{ $t('post.sold_price') }}:</b><p>{{item.sale–°ount}}: {{$t('uzb_currency')}}</p>\n          </div>\n        </q-card-section>\n      </q-card>\n      <q-card v-else>\n        <q-card-section>\n          <b>Hech Narsa topilmadi</b>\n        </q-card-section>\n      </q-card>\n    </div>\n    <vs-dialog v-model=\"fun\" blur prevent-close>\n      <q-toolbar style=\"display: flex; flex-direction: column\">\n        <q-toolbar-title>\n          {{ $t('post.sold_items') }}\n        </q-toolbar-title>\n      </q-toolbar>\n      <q-card class=\"no-padding ml-2 mr-2 mb-2\" v-for=\"(item, i) in whItems\" :key=\"`item-${i}`\">\n        <q-card-section dense class=\"bg-cyan-3 text-blue-grey-10\">\n          <div class=\"q-pa-none q-ma-none\" style=\"display: flex; justify-content: space-between; text-align: left\">\n            <b style=\"letter-spacing: 2px\">{{ $t('items.sku') }}:</b><p>{{item.cku}}</p>\n          </div>\n          <div class=\"q-pa-none q-ma-none\" style=\"display: flex; justify-content: space-between\">\n            <b style=\"letter-spacing: 2px\">{{ $t('items.size') }}:</b><p>{{item.sizeOlcham}}</p>\n          </div>\n          <div class=\"q-pa-none q-ma-none\" style=\"display: flex; justify-content: space-between\">\n            <b style=\"letter-spacing: 2px\">{{ $t('items.price') }}:</b><p>{{item.salePrice}}</p>\n          </div>\n        </q-card-section>\n      </q-card>\n      <vs-input\n          state=\"primary\"\n          block\n          class=\"mt-3\"\n          :label=\"$t('doc.comment')\"\n          v-model=\"comment\"\n      />\n      <vs-button @click=\"returnGoods\" class=\"mt-2\" block success gradient>{{ $t('post.return') }}</vs-button>\n    </vs-dialog>\n    <vs-dialog v-model=\"resale\"  blur prevent-close width=\"100%\">\n      <q-toolbar>\n        <vs-row>\n          <vs-col w=\"1\">\n            <vs-button style=\"top: -8px\" flat icon danger @click=\"clear\">\n              <q-icon name=\"delete\"/>\n            </vs-button>\n          </vs-col>\n          <vs-col w=\"11\">\n            <q-toolbar-title>{{ $t('post.payment') }}</q-toolbar-title>\n          </vs-col>\n        </vs-row>\n      </q-toolbar>\n      <vs-row>\n        <vs-col class=\"mb-1\">\n          <q-toolbar-title>\n            {{ calculateTotal }}: {{ calculate }} So'm\n          </q-toolbar-title>\n        </vs-col>\n      </vs-row>\n      <div>\n        <q-card  class=\"no-padding mb-1\" v-for=\"(item, i) in saleform.whItems\" :key=\"item.id\">\n          <q-btn\n              :class=\"windowWidth < 600 ? 'small' : 'desktop'\"\n              round\n              color=\"negative\"\n              size=\"sm\"\n              icon=\"close\"\n              @click=\"deleteDynamicItem(i)\"\n          ></q-btn>\n          <q-card-section vertical class=\"pl-1\">\n            <div style=\"display: flex; justify-content: space-between\">\n              <div style=\"text-align: left\"><b>{{ $t('items.brand') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.brandName }}</span></div>\n              <div style=\"text-align: left\"><b>{{ $t('items.sku') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.cku }}</span></div>\n            </div>\n            <q-separator/>\n            <div style=\"display: flex; justify-content: space-between;\" class=\"mt-1 mb-1\">\n              <div style=\"text-align: left\"><b>{{ $t('items.size') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.sizeOlcham }}</span></div>\n            </div>\n            <q-separator/>\n            <div style=\"display: flex; justify-content: space-between;\" class=\"mt-1 mb-1\">\n              <div style=\"text-align: left\"><b>{{ $t('items.count') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.count }}</span></div>\n            </div>\n            <q-separator/>\n            <div style=\"display: flex; justify-content: space-between\">\n              <div style=\"text-align: left\"><b>{{ $t('items.colors') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.colorName }}</span></div>\n              <!--<div style=\"text-align: left\"><b>{{ $t('items.brand') }}:</b> <span\n                  class=\"text-pink-6\">{{ item.brandName }}</span></div>-->\n            </div>\n            <q-separator/>\n            <div style=\"text-align: center\">\n              <b>{{ $t('post.sold_price') }}:</b>\n              <span class=\"text-pink-6 mt-1\" style=\"font-size: 16px;\">{{item.salePrice }}</span>\n            </div>\n          </q-card-section>\n        </q-card>\n      </div>\n      <template #footer>\n        <div style=\"display: flex; justify-content: center; flex-direction: column\">\n          <div v-for=\"(payment, i) in paymentList\" :key=\"i\">\n            <div style=\"display: flex; justify-content: center; flex-direction: row;\" class=\"mt-1\">\n              <vs-button @click=\"calculatePrice(payment, i)\">{{payment.name}}</vs-button>\n              <input :id=\"`price-${i}`\" state=\"primary\" v-model=\"paymentList[i].amount\" :key=\"i\" class=\"vs-input a\"/>\n            </div>\n          </div>\n        </div>\n        <vs-row>\n          <vs-col w=\"12\">\n            <vs-button @click=\"save\" class=\"mt-1\" block success gradient>{{ $t('post.payment') }}</vs-button>\n          </vs-col>\n        </vs-row>\n      </template>\n    </vs-dialog>\n  </div>\n</template>\n\n<script>\nimport SaleService from \"@/modules/post/post/sale.service\";\nimport {TokenService} from \"@/services/storage.service\";\nimport PaymentService from \"@/modules/references/payment/payment.service\";\nimport ZReportService from \"@/modules/post/post/z-report.service\";\nimport DepartmentService from \"@/modules/management/department/department.service\";\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      items: [],\n      search: '',\n      windowWidth: window.innerWidth,\n      whItems: [],\n      fun: false,\n      found: false,\n      columns: [\n        {name: 'id', align: 'center', label: this.$t('doc.index'), field: 'index'},\n        {name: 'cashierName', align: 'center', label: this.$t('post.seller'), field: 'cashierName'},\n        {name: 'regNumber', align: 'center', label: this.$t('post.regNumber'), field: 'regNumber'},\n        {name: 'regDate', align: 'center', label: this.$t('post.regDate'), field: 'regDate'},\n        {name: 'saleCount', align: 'center', label: this.$t('post.sold_price'), field: 'sale–°ount'},\n        {name: 'actions', align: 'center', label: this.$t('doc.action'), field: 'actions'}\n      ],\n      totalCount: 0,\n      fromDepartmentId: 0,\n      cashierId: 0,\n      comment: '',\n      resale: false,\n      saleform: {\n        cashboxId: null,\n        cashboxName: \"\",\n        comment: \"\",\n        contragentId: null,\n        contragentName: \"\",\n        fromDepartmentId: null,\n        fromDepartmentName: \"\",\n        regDate: \"\",\n        regNumber: \"\",\n        status: \"ACTIVE\",\n        toDepartmentId: null,\n        zetReportId: null,\n        toDepartmentName: \"\",\n        paymentTypeId: null,\n        ammount: 0,\n        totolCount: 0,\n        whItems:[],\n        paymentDtos: []\n      },\n      paymentDtos: {\n        ammount: 0,\n        id: 0,\n        paymentTypeId: 0,\n        paymentTypeName: \"\",\n        totolCount: 0\n      },\n      paymentList: [],\n      notFuny: '',\n      info: {},\n      saleDocId: null,\n      checkZetReport: false,\n      lol: {},\n      depList: []\n    }\n  },\n  watch: {\n    \"search\": {\n      handler(e) {\n        this.getItemByRegNumber(e)\n      }\n    },\n    'paymentList': {\n      handler(e) {\n      },\n      deep: true\n    }\n  },\n\n  computed: {\n    calculateTotal() {\n      return  this.saleform.whItems.reduce((total, item) => {\n        return this.saleform.totolCount = total + item.count\n      }, 0)\n    },\n    calculate() {\n      return this.saleform.whItems.reduce((total, item) => {\n        return this.saleform.ammount = total + item.count * item.salePrice\n      }, 0)\n    },\n  },\n  methods: {\n    getItemByRegNumber(regNumber) {\n      // let form = {}\n      /*/form.fromDepartmentId = parseInt(this.fromDepartmentId)\n      form.cashierId = this.cashierId\n      form.regNumber = parseInt(this.search)*/\n      // regNumber = this.search\n      SaleService.getByRegNumber(regNumber).then(res => {\n        this.found  = true\n        this.items = []\n        this.items = res.data\n      })\n    },\n    getDescription(id) {\n      SaleService.getReturnById(id).then(res => {\n        this.whItems = []\n        this.whItems = res.data.whDocItems\n        this.saleDocId = res.data.id\n        this.fun = true\n      })\n    },\n    async returnGoods() {\n      let bool\n      await ZReportService.CheckZetReport(localStorage.getItem('dep_id'), localStorage.getItem('cashboxId')).then(res => {\n        bool = res.data.open\n        if(bool === true) {\n          this.checkZetReport = true\n        }\n      })\n      if(this.checkZetReport === true) {\n          this.whItems.forEach(e => {\n            Object.assign(e, {returnCount: 0})\n            e.returnCount = e.count\n          })\n          await SaleService.returnItems(this.saleDocId, this.comment, this.whItems).then(res => {\n            this.createDoc()\n            this.found  = false\n          })\n        } else {\n          this.$vs.notification({\n            title: this.$t('must_open_zetReport'),\n            progress: 'auto',\n            duration: 1000,\n            color: 'warning',\n            position: 'top-right'\n          })\n        }\n    },\n    createDoc() {\n      SaleService.CreateEmptyDoc().then(res => {\n        this.getPaymentList()\n        this.saleform = {\n          whItems: [\n            {salePrice: null}\n          ]\n        }\n        this.saleform = res.data\n        this.saleform.whItems = this.whItems\n        this.saleform.fromDepartmentId = this.info.departmentId\n        this.resale = true\n        this.fun = false\n      }).catch(e => {\n        this.$vs.notification({\n          title: e.message,\n          duration: 1000,\n          progress: 'auto',\n          color: 'danger',\n          position: 'top-right'\n        })\n      })\n    },\n    clear() {\n      this.saleform.whItems = []\n      this.totalPorducts = 0\n      this.totalSum = 0\n      this.payment = false\n      this.itemsTotal = null\n    },\n    getPaymentList() {\n      PaymentService.getPaymentList().then(res => {\n        this.paymentList = res.data\n        this.paymentList.forEach(pay => {\n          pay.amount = 0\n        })\n      })\n    },\n    calculatePrice(payment, index) {\n      let sum = 0\n      this.paymentList.forEach(pay => {\n        pay.amount = parseFloat(pay.amount);\n        if (pay.amount)\n          sum += pay.amount\n      })\n      payment.amount = this.calculate - sum;\n      this.notFuny = payment.amount\n      this.$set(this.paymentList, index, payment);\n    },\n    deleteDynamicItem(index) {\n      this.saleform.whItems.splice(index, 1)\n      this.itemsTotal--\n    },\n    save() {\n      this.saleform.status = 'READY'\n      this.saleform.cashboxId = localStorage.getItem('cashboxId')\n      this.saleform.zetReportId = this.checkedZetId\n      this.saleform.paymentDtos = this.paymentList.map(e => {\n        return {\n          paymentTypeId:e.id,\n          amount:e.amount,\n          name:e.name\n        }\n      }).filter(e => e.amount && e.amount>0 )\n      parseInt(this.saleform.whItems.salePrice)\n      this.saleform.fromDepartmentId = this.lol.id\n      this.saleform.fromDepartmentName = this.lol.name\n      SaleService.saveSale(this.saleform).then(res => {\n        this.resale = false\n        this.clear()\n        this.$vs.notification({\n          title: this.$t('success_updated'),\n          progress: 'auto',\n          duration: 1000,\n          color: 'success',\n          position: 'top-right'\n        })\n      })\n    }\n  },\n  created() {\n    this.fromDepartmentId = TokenService.getDepartmentId()\n    this.info = TokenService.getUserInfo()\n    this.cashierId = this.info.id\n    DepartmentService.getDepByAccess().then(res => {\n      this.depList = res.data || []\n      this.depList.forEach(dep => {\n        if(dep.id == TokenService.getDepartmentId()){\n          return this.lol = dep\n        }\n      })\n    })\n\n  }\n}\n</script>\n\n<style scoped>\n.small {\n  font-size: 10px;\n  right: -150px;\n  top: -10px;\n}\n.desktop {\n  font-size: 10px;\n  right: -380px;\n  top: -12px;\n}\n</style>\n"]}]}