{"remainingRequest":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!P:\\noenter\\basconi-frontend-master\\src\\modules\\management\\department\\index.vue?vue&type=style&index=0&id=ed698660&scoped=true&lang=css&","dependencies":[{"path":"P:\\noenter\\basconi-frontend-master\\src\\modules\\management\\department\\index.vue","mtime":1652787130000},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1695882312813},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1695882545754},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1695882308750},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1695882313197},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1695882545643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgpAbWVkaWEgKG1pbi13aWR0aDogMjUwcHgpIHsKICAudGl0bGVUb29sIHsKICAgIGZvbnQtc2l6ZTogMTdweDsKICB9Cn0KQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7CiAgLnRpdGxlVG9vbCB7CiAgICBmb250LXNpemU6IDIwcHg7CiAgfQp9Cgo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;AAsTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/modules/management/department","sourcesContent":["<template>\n  <div>\n    <q-toolbar>\n      <q-toolbar-title shrink class=\"titleTool\">\n        {{ $t('management.department') }}\n      </q-toolbar-title>\n      <q-space/>\n      <vs-button v-if=\"$can('Create', 'Department')\" success animation-type=\"rotate\" @click=\"createForm\">\n        <q-icon name=\"add\"/>\n        <template #animate>\n          <q-icon name=\"add\"/>\n        </template>\n      </vs-button>\n    </q-toolbar>\n    <q-separator/>\n    <q-splitter v-model=\"splitterModel\" v-if=\"windowWidth > 600\">\n      <template v-slot:before>\n        <div class=\"q-pa-md\">\n          <q-list bordered separator>\n            <q-item v-for=\"(dep, index) in departmentList\" :key=\"`deps-${index}`\" @click=\"selected = dep.name\" clickable v-ripple :active=\"selected === dep.name\">\n              <q-item-section avatar>\n                <q-icon name=\"shopping_cart\"/>\n              </q-item-section>\n              <q-item-section>{{ dep.name }}</q-item-section>\n            </q-item>\n          </q-list>\n        </div>\n      </template>\n      <template v-slot:after>\n        <q-tab-panels v-model=\"selected\" animated>\n          <q-tab-panel v-for=\"(tab, index) in departmentList\" :key=\"`departmentList-${i}`\" :name=\"tab.name\">\n            <div class=\"text-h5 q-mb-md\">{{ selectedDep.name }}</div>\n            <hr>\n            <vs-row style=\"padding: 50px\">\n              <vs-col w=\"6\" align=\"left\">\n                <div v-if=\"selectedDep.name\"><b>{{ $t('doc.name') }}: </b> <span>{{ selectedDep.name }}</span></div>\n                <div v-if=\"selectedDep.address\" class=\"mt-1\"><b>{{ $t('doc.address') }}: </b> <span>{{ selectedDep.address }}</span></div>\n              </vs-col>\n              <vs-col w=\"6\" align=\"left\">\n                <div v-if=\"selectedDep.phoneNumber\"><b>{{ $t('doc.phone_number') }}: </b><span>{{ selectedDep.phoneNumber }}</span></div>\n              </vs-col>\n              <vs-col w=\"12\" align=\"center\" justify=\"center\" class=\"mt-4\">\n                <vs-button v-if=\"$can('Update', 'Department')\" @click=\"editForm(selectedDep)\" primary class=\"mr-4\" style=\"display: inline-block\" gradient animation-type=\"scale\">\n                  {{ $t('actions.edit') }}\n                  <template #animate>\n                    <i class=\"mdi mdi-pencil\"/>\n                  </template>\n                </vs-button>\n                <vs-button v-if=\"$can('Delete', 'Department')\" @click=\"deleteModalTrue(selectedDep.id)\" danger class=\"mr-4\" style=\"display: inline-block\" gradient animation-type=\"scale\">\n                  {{ $t('actions.delete') }}\n                  <template #animate>\n                    <i class=\"mdi mdi-delete\"/>\n                  </template>\n                </vs-button>\n              </vs-col>\n            </vs-row>\n          </q-tab-panel>\n        </q-tab-panels>\n      </template>\n    </q-splitter>\n\n    <div v-else class=\"q-pa-md\">\n      <q-expansion-item\n          v-for=\"(dep, i) in departmentList\"\n          :key=\"`departmentList-${i}`\"\n          group=\"shopDep\"\n          :label=\"dep.name\"\n          icon=\"shopping_cart\"\n          style=\"border-radius: 30px\"\n          expand-icon-class=\"text-white\"\n          header-class=\"bg-primary text-white\"\n          class=\"shadow-24 overflow-hidden mt-1\"\n      >\n        <vs-row class=\"mt-2\">\n          <vs-col w=\"12\" align=\"left\" class=\"ml-5\"><div v-if=\"dep.name\"><b>{{ $t('doc.name') }}: </b> <span>{{ dep.name }}</span></div></vs-col>\n          <vs-col w=\"12\" align=\"left\" class=\"ml-5\"><div v-if=\"dep.phoneNumber\" class=\"mt-1\"><b>{{ $t('doc.phone_number') }}: </b> <span>{{ dep.phoneNumber }}</span></div></vs-col>\n          <vs-col w=\"12\" align=\"left\" class=\"ml-5\"><div v-if=\"dep.address\" class=\"mt-1\"><b>{{ $t('doc.address') }}: </b> <span>{{ dep.address }}</span></div></vs-col>\n        </vs-row>\n        <vs-row class=\"mt-2 mb-2\">\n          <vs-col w=\"12\" justify=\"center\" align=\"center\">\n            <vs-button v-if=\"$can('Update', 'Department')\" @click=\"editForm(dep)\" primary class=\"\" style=\"display: inline-block\" gradient>\n              <i class=\"mdi mdi-pencil\"/>\n            </vs-button>\n            <vs-button v-if=\"$can('Delete', 'Department')\"  @click=\"deleteModalTrue(dep.id)\" danger class=\"\" style=\"display: inline-block\" gradient>\n              <i class=\"mdi mdi-delete\"/>\n            </vs-button>\n          </vs-col>\n        </vs-row>\n      </q-expansion-item>\n    </div>\n\n\n\n    <!--          Create / Edit          -->\n    <vs-dialog blur prevent-close v-model=\"createModal\">\n      <template #header>\n        <b v-if=\"create\">{{ $t('management.new_department') }}</b>\n        <b v-else>{{ $t('management.edit_department') }}</b>\n      </template>\n      <q-separator/>\n      <validation-observer ref=\"departmentForm\" v-slot=\"{}\">\n        <vs-row>\n          <vs-col w=\"12\">\n            <validation-provider v-slot=\"{valid}\" rules=\"required\" name=\"name\">\n              <vs-input state=\"primary\" v-model=\"form.name\" class=\"mt-3\" :class=\"!valid ? 'required' : ''\" :danger=\"!valid\"  block :placeholder=\"$t('doc.name')\" :label=\"$t('doc.name')\"/>\n            </validation-provider>\n            <validation-provider v-slot=\"{valid}\" rules=\"required\" name=\"address\">\n              <vs-input state=\"primary\" v-model=\"form.address\" class=\"mt-3\" :class=\"!valid ? 'required' : ''\" :danger=\"!valid\"  block :placeholder=\"$t('doc.address')\" :label=\"$t('doc.address')\"/>\n            </validation-provider>\n            <validation-provider v-slot=\"{valid}\" rules=\"required|min:17|max:17\" name=\"phoneNumber\">\n              <vs-input state=\"primary\" @keyup.enter=\"save\" v-model=\"form.phoneNumber\" class=\"mt-3\" v-mask=\"'+998-##-###-##-##'\"\n              :class=\"!valid ?\n              'required' : ''\" :danger=\"!valid\"  block :label=\"$t('doc.phone_number')\" :placeholder=\"$t('doc.phone_number')\"/>\n            </validation-provider>\n          </vs-col>\n        </vs-row>\n      </validation-observer>\n      <template #footer>\n        <vs-button class=\"mt-2\" block primary gradient @keyup.enter=\"save\" @click=\"save\">{{ $t('actions.save') }}</vs-button>\n      </template>\n    </vs-dialog>\n\n\n\n    <!--       Delete       -->\n    <confirm-modal :model=\"deleteModal\" @submit=\"deleteDepartment\" @close=\"deleteModal = false\" :text=\"$t('confirm_delete')\"/>\n  </div>\n</template>\n\n<script>\nimport DepartmentService from \"./department.service\";\nimport ConfirmModal from \"../../../components/confirmModal.vue\"\n\nexport default {\n  name: \"index\",\n  components: {ConfirmModal},\n  data() {\n    return {\n      loading: false,\n      splitterModel: 35,\n      windowWidth: window.innerWidth,\n      selected: '',\n      selectedDep: {},\n      departmentList: [],\n      tabPanels: [],\n      depId: null,\n      createModal: false,\n      deleteModal: false,\n      create: true,\n      form: {\n        name: '',\n        address: '',\n        phoneNumber: '+998'\n      },\n      currency: [],\n      depTypes: [],\n      saleTypes: [\n        {name: 'РОЗНИЧНАЯ ТОРГОВЛЯ', id: 'RETAIL'},\n        {name: 'ОПТОВАЯ ТОРГОВЛЯ', id: 'WHOLESALE'}\n      ],\n    }\n  },\n  methods: {\n    getDepsList() {\n      DepartmentService.getDepartmentsList().then(res => {\n        this.departmentList = []\n        this.departmentList = res.data\n        this.selected = res.data[0].name\n      }).catch(e => {\n        this.$vs.notification({\n          duration: 1000,\n          title: e.message,\n          type:'confirm',\n          progress: 'auto',\n          color: 'danger',\n          position: 'top-right'\n        })\n      })\n    },\n    createForm() {\n      this.create = true\n      this.form = {\n        name: '',\n        address: '',\n        phoneNumber: '+998'\n      }\n      this.createModal = true\n    },\n    editForm(item) {\n      this.create = false\n      this.form = Object.assign({}, item)\n      this.createModal = true\n    },\n    deleteModalTrue(id) {\n      this.depId = null\n      this.deleteModal = true\n      this.depId = id\n    },\n    deleteDepartment() {\n      DepartmentService.deleteDepartment(this.depId).then(res => {\n        this.deleteModal = false\n        this.$vs.notification({\n          type:'confirm',\n          duration: 1000,\n          title: this.$t('success_deleted'),\n          progress: 'auto',\n          color: 'success',\n          position: 'top-right'\n        })\n        this.getDepsList();\n      }).catch(e => {\n        this.$vs.notification({\n          type:'confirm',\n          duration: 1000,\n          title: e.message,\n          progress: 'auto',\n          color: 'danger',\n          position: 'top-right'\n        })\n      })\n    },\n    save() {\n      this.$refs.departmentForm.validate().then(valid => {\n        if (valid) {\n          if (this.create) {\n            DepartmentService.createDepartment(this.form).then(res => {\n              this.createModal = false\n              this.getDepsList();\n              this.$vs.notification({\n                type:'confirm',\n                duration: 1000,\n                title: this.$t('success_created'),\n                progress: 'auto',\n                color: 'success',\n                position: 'top-right'\n              })\n            }).catch(e => {\n              this.$vs.notification({\n                type:'confirm',\n                duration: 1000,\n                title: e.message,\n                progress: 'auto',\n                color: 'danger',\n                position: 'top-right'\n              })\n            })\n          } else {\n            DepartmentService.updateDepartment(this.form).then(res => {\n              this.createModal = false\n              this.getDepsList();\n              this.$vs.notification({\n                type:'confirm',\n                duration: 1000,\n                title: this.$t('success_updated'),\n                progress: 'auto',\n                color: 'success',\n                position: 'top-right'\n              })\n            }).catch(e => {\n              this.$vs.notification({\n                type:'confirm',\n                duration: 1000,\n                title: e.message,\n                progress: 'auto',\n                color: 'danger',\n                position: 'top-right'\n              })\n            })\n          }\n        } else {\n          this.$vs.notification({\n            type:'confirm',\n            duration: 1000,\n            title: this.$t('required_error'),\n            progress: 'auto',\n            color: 'danger',\n            position: 'top-right'\n          })\n        }\n      }).catch(e => {\n        this.$vs.notification({\n          type:'confirm',\n          duration: 1000,\n          title: e,\n          progress: 'auto',\n          color: 'danger',\n          position: 'top-right'\n        })\n      })\n    }\n  },\n  watch: {\n    'selected': {\n      handler(e) {\n        this.departmentList.forEach(t => {\n          if (t.name == e) {\n            this.selectedDep = t\n          }\n        })\n      }\n    }\n  },\n  created() {\n    this.getDepsList();\n  }\n}\n</script>\n\n<style scoped lang=\"css\">\n\n@media (min-width: 250px) {\n  .titleTool {\n    font-size: 17px;\n  }\n}\n@media (min-width: 600px) {\n  .titleTool {\n    font-size: 20px;\n  }\n}\n\n</style>\n"]}]}