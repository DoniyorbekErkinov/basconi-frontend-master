{"remainingRequest":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!P:\\noenter\\basconi-frontend-master\\src\\layouts\\MainLayout.vue?vue&type=template&id=18ca20c2&scoped=true&","dependencies":[{"path":"P:\\noenter\\basconi-frontend-master\\src\\layouts\\MainLayout.vue","mtime":1652787130000},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1695882313197},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1695882545762},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1695882313197},{"path":"P:\\noenter\\basconi-frontend-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1695882545643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}